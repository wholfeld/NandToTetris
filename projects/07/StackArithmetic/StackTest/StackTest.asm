// Writing push from constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// Writing push from constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
 // Writing comparative command eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@JUMPTRUE0
D;JEQ
@SP
A=M
M=0
@END0
0;JMP
(JUMPTRUE0)
@SP
A=M
M=-1
(END0)
@SP
M=M+1
// Writing push from constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// Writing push from constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
 // Writing comparative command eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@JUMPTRUE1
D;JEQ
@SP
A=M
M=0
@END1
0;JMP
(JUMPTRUE1)
@SP
A=M
M=-1
(END1)
@SP
M=M+1
// Writing push from constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
// Writing push from constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
 // Writing comparative command eq
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@JUMPTRUE2
D;JEQ
@SP
A=M
M=0
@END2
0;JMP
(JUMPTRUE2)
@SP
A=M
M=-1
(END2)
@SP
M=M+1
// Writing push from constant 892
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
// Writing push from constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
 // Writing comparative command lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@JUMPTRUE3
D;JLT
@SP
A=M
M=0
@END3
0;JMP
(JUMPTRUE3)
@SP
A=M
M=-1
(END3)
@SP
M=M+1
// Writing push from constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// Writing push from constant 892
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
 // Writing comparative command lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@JUMPTRUE4
D;JLT
@SP
A=M
M=0
@END4
0;JMP
(JUMPTRUE4)
@SP
A=M
M=-1
(END4)
@SP
M=M+1
// Writing push from constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// Writing push from constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
 // Writing comparative command lt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@JUMPTRUE5
D;JLT
@SP
A=M
M=0
@END5
0;JMP
(JUMPTRUE5)
@SP
A=M
M=-1
(END5)
@SP
M=M+1
// Writing push from constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// Writing push from constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
 // Writing comparative command gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@JUMPTRUE6
D;JGT
@SP
A=M
M=0
@END6
0;JMP
(JUMPTRUE6)
@SP
A=M
M=-1
(END6)
@SP
M=M+1
// Writing push from constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// Writing push from constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
 // Writing comparative command gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@JUMPTRUE7
D;JGT
@SP
A=M
M=0
@END7
0;JMP
(JUMPTRUE7)
@SP
A=M
M=-1
(END7)
@SP
M=M+1
// Writing push from constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// Writing push from constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
 // Writing comparative command gt
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@JUMPTRUE8
D;JGT
@SP
A=M
M=0
@END8
0;JMP
(JUMPTRUE8)
@SP
A=M
M=-1
(END8)
@SP
M=M+1
// Writing push from constant 57
@57
D=A
@SP
A=M
M=D
@SP
M=M+1
// Writing push from constant 31
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
// Writing push from constant 53
@53
D=A
@SP
A=M
M=D
@SP
M=M+1
 // Writing arithmetic command add
@SP
A=M-1
D=M
A=A-1
M=M+D
D=A+1
@SP
M=D
// Writing push from constant 112
@112
D=A
@SP
A=M
M=D
@SP
M=M+1
 // Writing arithmetic command sub
@SP
A=M-1
D=M
A=A-1
M=M-D
D=A+1
@SP
M=D
 // Writing single operand neg
@SP
A=M-1
M=-M
 // Writing arithmetic command and
@SP
A=M-1
D=M
A=A-1
M=M&D
D=A+1
@SP
M=D
// Writing push from constant 82
@82
D=A
@SP
A=M
M=D
@SP
M=M+1
 // Writing arithmetic command or
@SP
A=M-1
D=M
A=A-1
M=M|D
D=A+1
@SP
M=D
 // Writing single operand not
@SP
A=M-1
M=!M
